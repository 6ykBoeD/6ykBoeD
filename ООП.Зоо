using System;
using System.Collections.Generic;
using System.Linq;
using System.Net.Http.Headers;
using System.Security;
using System.Text;
using System.Threading.Tasks;
using System.Xml.Linq;

namespace Zoo
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Zoo zoo = new Zoo();
            zoo.StartProgram();
        }
    }

    class Zoo
    {
        private List<Aviary> _aviaries = new List<Aviary>();

        public Zoo()
        {
            _aviaries.Add(new Aviary(Animals.Cat));
            _aviaries.Add(new Aviary(Animals.Cow));
            _aviaries.Add(new Aviary(Animals.Dog));
            _aviaries.Add(new Aviary(Animals.Duck));
            _aviaries.Add(new Aviary(Animals.Lion));
        }

        public void StartProgram()
        {
            bool isWork = true;

            while (isWork)
            {
                for (int i = 0; i < _aviaries.Count; i++)
                {
                    Console.WriteLine($"[Вальер - {_aviaries[i].Id}]");
                }

                Console.WriteLine("\nВыберите номер вальера:\n");
                int index = GetIndex();
                _aviaries[index].ShowInfo();

                Console.ReadKey();
                Console.Clear();
            }
        }

        private int GetIndex()
        {
            bool isWork = true;

            while (isWork)
            {
                bool isSuccess = int.TryParse(Console.ReadLine(), out int count);

                if (isSuccess)
                {
                    if(_aviaries.Count > 5)
                    {
                        
                        Console.WriteLine("Такого вальера не существует");
                    }
                    else
                    {
                        return count - 1;
                    }
                }
                else
                {
                    Console.WriteLine("Неверное значение");
                }
            }

            return 0;
        }
    }

    class Animal
    {
        private static Random _random = new Random();
        private int _genderChance = 101;
        private int _choosingGender = 50;

        public Animal()
        {
            if(_random.Next(_genderChance) >= _choosingGender)
            {
                IsMale = true;
            }
            else
            {
                IsMale = false;
            }
        }

        public string MaleName { get; protected set; }
        public string FemaleName { get; protected set; }
        public bool IsMale { get; protected set; }
        public string Sound { get; protected set; }
    }

    class Aviary
    {
        private static int _ids;
        private int _countMaleGender;
        private int _countFemaleGender;
        private List<Animal> _beasts = new List<Animal>();

        public Aviary(Animals animal)
        {
            CreateCell(animal);
            Id = ++_ids;
        }

        public int Id { get; private set; }

        public void ShowInfo()
        {
            Console.WriteLine($"\nВ этом вальере обитает {_countMaleGender} - {_beasts[0].MaleName} и {_countFemaleGender} - {_beasts[0].FemaleName}.Звук этих животных похож на {_beasts[0].Sound}");
        }

        private void CreateCell(Animals animal)
        {
            int numberBeasts = 5;

            for (int i = 0; i < numberBeasts; i++)
            {
                _beasts.Add(CreateAnimal(animal));

                if (_beasts[i].IsMale)
                {
                    _countMaleGender++;
                }
                else
                {
                    _countFemaleGender++;
                }
            }
        }

        private Animal CreateAnimal(Animals animal)
        {
            switch(animal)
            {
                case Animals.Cat: return new Cat();

                case Animals.Cow: return new Cow();

                case Animals.Dog: return new Dog();

                case Animals.Duck: return new Duck();

                case Animals.Lion: return new Lion();

            }

            return null;
        }
    }

    enum Animals
    {
        Cat = 1,
        Cow,
        Dog,
        Duck,
        Lion
    }

    class Cat : Animal
    {
        public Cat()
        {
            MaleName = "Кот";
            FemaleName = "Кошка";
            Sound = "Мяу";
        }
    }

    class Cow : Animal
    {
        public Cow()
        {
            MaleName = "Бык";
            FemaleName = "Корова";
            Sound = "Мууу";
        }
    }

    class Dog : Animal
    {
        public Dog()
        {
            MaleName = "Пёс";
            FemaleName = "Собака";
            Sound = "Гав-гав";
        }
    }

    class Duck : Animal
    {
        public Duck()
        {
            MaleName = "Селезень";
            FemaleName = "Утка";
            Sound = "Кря-кря";
        }
    }

    class Lion : Animal
    {
        public Lion()
        {
            MaleName = "Лев";
            FemaleName = "Львица";
            Sound = "Грррр";
        }
    }
}
