using System;
using System.Collections.Generic;


namespace Zoo
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Zoo zoo = new Zoo();
            zoo.StartProgram();
        }
    }

    class Zoo
    {
        private List<Aviary> _aviaries = new List<Aviary>();
        private int numbersAviaries = 5;

        public Zoo()
        {
            for (int i = 0; i < numbersAviaries; i++)
            {
                _aviaries.Add(new Aviary(i));
            }
        }

        public void StartProgram()
        {
            bool isWork = true;

            while (isWork)
            {
                for (int i = 0; i < _aviaries.Count; i++)
                {
                    Console.WriteLine($"[Вальер - {_aviaries[i].Id}]");
                }

                Console.WriteLine("\nВыберите номер вальера:\n");
                int index = GetIndex();

                if(index >= numbersAviaries || index < 0)
                {
                    Console.WriteLine("такого вальера не существует");
                }
                else
                {
                    _aviaries[index].ShowInfo();
                }

                Console.ReadKey();
                Console.Clear();
            }
        }

        private int GetIndex()
        {
            bool isWork = true;

            while (isWork)
            {
                bool isSuccess = int.TryParse(Console.ReadLine(), out int count);

                if (isSuccess)
                {
                    return count - 1;
                }
                else
                {
                    Console.WriteLine("Неверное значение");
                }
            }

            return 0;
        }
    }

    abstract class Animal
    {
        private static Random _random = new Random();

        public Animal()
        {
            int _genderChance = 101;
            int _choosingGender = 50;

            IsMale = _random.Next(_genderChance) >= _choosingGender;
        }

        public string MaleName { get; protected set; }
        public string FemaleName { get; protected set; }
        public bool IsMale { get; protected set; }
        public string Sound { get; protected set; }
    }

    class Aviary
    {
        private static int _ids;
        private AviaryBuilder _builder = new AviaryBuilder();
        private List<Animal> _animals = new List<Animal>();

        public Aviary(int index)
        {
            _builder.CreateCell(index);
            Id = ++_ids;
        }

        public int Id { get; private set; }

        public void ShowInfo()
        {
            Console.WriteLine($"\nВ этом вальере обитает {_builder.CountMaleGender} - {_builder.ShowMaleName()} и {_builder.CountFemaleGender} - {_builder.ShowFemaleName()}" +
                $".Звук этих животных похож на {_builder.ShowSound()}");
        }
    }

    class AviaryBuilder
    {
        public int CountMaleGender { get; private set; }
        public int CountFemaleGender { get; private set; }
        private List<Animal> _animals = new List<Animal>();

        public void CreateCell(int index)
        {
            int numberBeasts = 5;

            for (int i = 0; i < numberBeasts; i++)
            {
                _animals.Add(CreateAnimal(index));

                if (_animals[i].IsMale)
                {
                    CountMaleGender++;
                }
                else
                {
                    CountFemaleGender++;
                }
            }
        }

        public string ShowSound()
        {
            return _animals[0].Sound;
        }

        public string ShowMaleName()
        {
            return _animals[0].MaleName;
        }

        public string ShowFemaleName() 
        {
            return _animals[0].FemaleName;
        }

        private Animal CreateAnimal(int index)
        {
            List<Animal> animals = new List<Animal>()
            {
                new Cat(),new Cow(),new Dog(),new Duck(),new Lion()
            };

            return animals[index];
        }
    }

    class Cat : Animal
    {
        public Cat()
        {
            MaleName = "Кот";
            FemaleName = "Кошка";
            Sound = "Мяу";
        }
    }

    class Cow : Animal
    {
        public Cow()
        {
            MaleName = "Бык";
            FemaleName = "Корова";
            Sound = "Мууу";
        }
    }

    class Dog : Animal
    {
        public Dog()
        {
            MaleName = "Пёс";
            FemaleName = "Собака";
            Sound = "Гав-гав";
        }
    }

    class Duck : Animal
    {
        public Duck()
        {
            MaleName = "Селезень";
            FemaleName = "Утка";
            Sound = "Кря-кря";
        }
    }

    class Lion : Animal
    {
        public Lion()
        {
            MaleName = "Лев";
            FemaleName = "Львица";
            Sound = "Грррр";
        }
    }
}
