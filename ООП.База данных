using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace CSLight
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Database players = new Database();
            Console.WriteLine("1 - для добавления игрока\n2 - для бана игрока\n3 - для разблокировки игрока\n4 - для удаления игрока\n5 - показать информацию о игроках\n6 - для выходи из программы");
            bool isRepeat = true;

            while (isRepeat)
            {
                Console.WriteLine("Выберите действие");

                switch (Console.ReadLine())
                {
                    case "1":
                        players.AddPlayer();
                        break;

                        case "2":
                        players.BanPlayer();
                        break;

                    case "3":
                        players.UnBanPlayer();
                        break;

                    case "4":
                        players.DeletePlayer();
                        break;
                        
                    case "5":
                        players.ShowInfo();
                        break;

                    case "6":
                        isRepeat = false;
                        break;
                }
            }
        }
    }

    class Player
    {
        private static int _ids ;
        public bool IsBan { get; private set; }
        public string Name { get; private set; }
        public int Level { get; private set; }
        public int Id { get; private set; }

        public Player(string name , int level , bool isBan = false)
        {
            Id = ++_ids;
            Name = name;
            Level = level;
            IsBan = isBan;
        }

        public void Ban()
        {
            IsBan = true;
        }

        public void UnBan()
        {
            IsBan = false;
        }
    }

    class Database
    {
        private List<Player> _players = new List<Player>();
        
        public void AddPlayer()
        {
            bool isWork = true;
            
            while (isWork)
            {
                Console.WriteLine("Введите имя :");
                string name = Console.ReadLine();
                Console.WriteLine("Какой уровень :");
                bool isSucces = int.TryParse(Console.ReadLine(), out int level);

                if (isSucces == true)
                {
                    _players.Add(new Player(name, level));
                    isWork = false;
                }
                else
                {
                    Console.WriteLine("Попробуйте снова");
                }
            }    
        }

        public void ShowInfo()
        {
            for (int i = 0; i < _players.Count; i++)
            {
                if (_players[i].IsBan == false)
                {
                    Console.WriteLine($"id - {_players[i].Id},Имя - {_players[i].Name},Уровень - {_players[i].Level}\n");
                }
            }
        }

        public void BanPlayer()
        {
            Console.WriteLine("Введите номер Id для бана игрока ");
            TryFindPlayer(out Player player);
            player.Ban();
        }

        public void UnBanPlayer()
        {
            Console.WriteLine("Введите номер Id для разбана игрока ");
            TryFindPlayer(out Player player);
            player.UnBan();
        }

        public void DeletePlayer()
        {
            Console.WriteLine("Введите номер Id для удаления игрока ");
            TryFindPlayer(out Player player);
            _players.Remove(player);
        }

        private bool TryFindPlayer(out Player foundPlayer)
        {
            bool isWork = true;

            while(isWork)
            {
                bool isSucces = int.TryParse(Console.ReadLine(), out int numberId);

                if (isSucces == true && numberId > 0 && numberId <= _players.Count)
                {
                    foreach (Player player in _players)
                    {
                        if (player.Id == numberId)
                        {
                            foundPlayer = player;
                            isWork = false;
                            return true;
                        }
                    }
                }
                else
                {
                    Console.WriteLine("Неверное значение попробйте снова ");
                }
            }

            Console.WriteLine("Игрок с таким ID отсутствует.");
            foundPlayer = null;
            return false;
        }
    }
}

