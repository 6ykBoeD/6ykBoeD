using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace CSLight
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Repository repositoryBook = new Repository();
            bool isRepeat = true;

            while (isRepeat)
            {
                Console.WriteLine("1 - для добвление новой книги\n2 - показать книги по указаному параметру\n3 - показать все книги \n4 - убрать книгу\n5 - выход");

                switch (Console.ReadLine())
                {
                    case "1":
                        repositoryBook.AddBook();
                        break;

                    case "2":
                        repositoryBook.ShowBooksCategory();
                        break;

                    case "3":
                        repositoryBook.ShowAllBooks();
                        break;

                    case "4":
                        repositoryBook.DeleteBook();
                        break;

                    case "5":
                        isRepeat = false;
                        break;
                }

                Console.WriteLine("\nНижмите любую клавишу");
                Console.ReadKey();
                Console.Clear();
            }
        }
    }

    class Book
    {
        private static int _ids;

        public int Id { get; private set; }
        public int YearRelease { get; private set; }
        public string Title { get; private set; }
        public string Author { get; private set; }

        public Book(string title, string author, int yearRelease)
        {
            Id = ++_ids;
            Title = title;
            Author = author;
            YearRelease = yearRelease;
        }
    }

    class Repository
    {
        private List<Book> _books = new List<Book>();

        public void AddBook()
        {
            Console.WriteLine("Введите название книги :");
            string title = Console.ReadLine();

            Console.WriteLine("Кто автор книги :");
            string author = Console.ReadLine();

            Console.WriteLine("В каком году книгу издали :");
            int yearRelease = GetNumber();
    
            _books.Add(new Book(title, author, yearRelease));
        }

        public void ShowBooksCategory()
        {
            bool isWork = true;

            while (isWork)
            {
                Console.WriteLine("1 - показать книги по названию\n2 - показать книги по автору\n3 - показать книгу по году издания\n4 - выйти");

                switch (Console.ReadLine())
                {
                    case "1":
                        ShowBooksByTitle();
                        break;

                    case "2":
                        ShowBooksByAuthor();
                        break;

                    case "3":
                        ShowBooksByYearRelease(); 
                        break;

                    case "4":
                        isWork = false;
                        break;
                }
            }
        }

        public void DeleteBook()
        {
            Console.WriteLine("Введите номер книги которую хотите убрать :");
            int numberId = GetNumber();

            for (int i = 0; i < _books.Count; i++)
            {
                if (_books[i].Id == numberId)
                {
                    _books.RemoveAt(i);
                }
            }
        }

        public void ShowAllBooks()
        {
            foreach (var book in _books)
            {
                _showBook(book);
            }
        }

        private void _showBook(Book book)
        {
            Console.WriteLine(book.Id + " " + book.Title + " " + book.Author + " " + book.YearRelease);
        }

        private void ShowBooksByTitle()
        {
            Console.WriteLine("\nВведите название книги :");
            string title = Console.ReadLine();

            foreach (var book in _books)
            {
                if (book.Title == title)
                {
                    _showBook(book);
                }
            }
        }

        private void ShowBooksByAuthor()
        {
            Console.WriteLine("Введите автора :");
            string author = Console.ReadLine();

            foreach (var book in _books)
            {
                if (book.Author == author)
                {
                    _showBook(book);
                }
            }
        }

        private void ShowBooksByYearRelease()
        {
            Console.WriteLine("Введите год издания :");
            int yearRelease = GetNumber();

            foreach (var book in _books)
            {
                if (book.YearRelease == yearRelease)
                {
                    _showBook(book);
                }
            }
        }

        private int GetNumber()
        {
            bool isRepeat = true;

            while (isRepeat)
            {
                bool isWork = int.TryParse(Console.ReadLine(), out int tempVariable);

                if (isWork)
                {
                    isRepeat = false;
                    return  tempVariable;
                }
                else
                {
                    Console.WriteLine("Неверное значение");
                }
            }
            return 0;
        }
    }
}

