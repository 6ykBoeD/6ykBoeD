using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace CSLight
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Seller seller = new Seller();
            Buyer buyer = new Buyer();
            buyer.AddMoney();
            bool isWork = true;

            while (isWork)
            {
                seller.ShowInfo();
                buyer.ShowInfo();
                Console.SetCursorPosition(0, 10);
                Console.WriteLine($"1 - Добавить товар в магазин\n2 - Положить в корзину\n3 - Оплатить покупки\n4 - Убрать товар из корзины\n5 - выход\n");
                string inputUser = Console.ReadLine();

                switch (inputUser)
                {
                    case "1":
                        seller.AddProducts();
                        break;

                    case "2":
                        buyer.PutInBasket(seller);
                        break;

                    case "3":
                        buyer.BuyProducts(seller);
                        break;

                    case "4":
                        buyer.RemoveProduct();
                        break;

                    case "5":
                        isWork = false;
                        break;
                }

                Console.WriteLine("\nНижмите любую клавишу");
                Console.ReadKey();
                Console.Clear();
            }
        }
    }

    class Product
    {
        public string Name { get; private set; }
        public int Price { get; private set; }

        public Product(string name, int price)
        {
            Name = name;
            Price = price;
        }
    }

    class Cell
    {
        public Product Product { get; private set; }    
        public int Count { get; private set; }

        public Cell(Product product, int count)
        {
            Product = product;
            Count = count;
        }

        public void DecreaseCount(int count)
        {
            Count -= count;
        }

        public void IncreaseCount(int count)
        {
            Count += count;
        }
    }

    class Seller
    {
        private List<Cell> _cells = new List<Cell>() { new Cell(new Product("Хлеб", 25),1000),new Cell (new Product("Сок", 50),500)};

        public int Account { get; private set; }

        public void AddProducts()
        {
            Console.WriteLine("Название продукта :\n");
            string inputName = Console.ReadLine();

            Console.WriteLine("Введите цену :\n");
            int inputPrice = GetNumber();

            Console.WriteLine("Введиет количество :\n");
            int inputCount = GetNumber();

            _cells.Add(new Cell(new Product(inputName, inputPrice),inputCount));
        }

        public void GetProduct(out Product product ,string nameProduct,int count)
        {
            product = null;
            
            if (_cells.Count > 0)
            {
                foreach (var cell in _cells)
                {
                    if(cell.Product.Name == nameProduct)
                    {
                        product = cell.Product;
                        cell.DecreaseCount(count);
                    }
                }
            }
        }

        public void IncreeseAccount(int sumPurchase)
        {
            Account += sumPurchase;
        }

        public void ShowInfo()
        {
            Console.WriteLine("Магазин");
            Console.WriteLine($"Касса = {Account}");

            for (int i = 0; i < _cells.Count; i++)
            {
                Console.WriteLine(_cells[i].Product.Name + " за " + _cells[i].Product.Price + " рубля в количестве " + _cells[i].Count);
            }
        }

        private int GetNumber()
        {
            bool isRepeat = true;

            while (isRepeat)
            {
                bool isSuccess = int.TryParse(Console.ReadLine(), out int count);

                if (isSuccess)
                {
                    return count;
                }
                else
                {
                    Console.WriteLine("Неверное значение");
                }
            }

            return 0;
        }
    }

    class Buyer
    {
        private List<Cell>  _cellsBuyer = new List<Cell> ();
        public int Account { get; private set; }

        public void AddMoney()
        {
            Account = 10000;
        }

        public void PutInBasket(Seller seller)
        {
            Console.WriteLine("Название продукта :");
            string nameProduct = Console.ReadLine();

            Console.WriteLine("Какое количество требуется :");
            int count = GetNumber();

            seller.GetProduct(out Product product, nameProduct, count);

            if(product != null)
            {
                if(_cellsBuyer.Count > 0)
                {
                    foreach (var cell in _cellsBuyer)
                    {
                        if (cell.Product == product)
                        {
                            cell.IncreaseCount(count);
                        }
                        else
                        {
                            _cellsBuyer.Add(new Cell(product, count));
                        }
                    }
                }
                else
                {
                    _cellsBuyer.Add(new Cell(product, count));
                }

            }
            else
            {
                Console.WriteLine("Такого товара нет");
            }
        }

        public void BuyProducts(Seller seller)
        {
            foreach (var cell in _cellsBuyer)
            {
                if (Account >= SumPurchase(cell.Count))
                {
                    Account -= SumPurchase(cell.Count);
                    seller.IncreeseAccount(SumPurchase(cell.Count));
                    Console.WriteLine("Спасибо за покупку.Приходите к нам ещё");
                }
                else
                {
                    Console.WriteLine($"У вас недостаточно средств.Не хватает {SumPurchase(cell.Count) - Account} рублей");
                }
            }
            
        }

        public void RemoveProduct()
        {
            Console.WriteLine("Название продукта который хотите убрать:");
            string nameProduct = Console.ReadLine();

            Console.WriteLine("Сколько хотите убрать :");
            int count = GetNumber();

            GetProduct(out Cell cell ,nameProduct);

            if (cell != null)
            {
                if (cell.Count > count)
                {
                    cell.DecreaseCount(count);
                }
                else
                {
                    _cellsBuyer.Remove(cell);
                }
            }
            else
            {
                Console.WriteLine("Такого товара нет в корзине");
            }
        }

        public void ShowInfo()
        {
            int positionX = 1;
            Console.SetCursorPosition(50, 0);
            Console.WriteLine("Корзина покупатель");
            Console.SetCursorPosition(50, 1);
            Console.WriteLine($"Баланс на счете покупателя = {Account}");
            

            for (int i = 0; i < _cellsBuyer.Count; i++)
            {
                Console.SetCursorPosition(50, ++positionX);
                Console.WriteLine(_cellsBuyer[i].Product.Name +  " в количестве " + _cellsBuyer[i].Count);
                Console.SetCursorPosition(50, (++positionX + 1));
                Console.WriteLine($"Стоимость товаров {SumPurchase(_cellsBuyer[i].Count)}");
            }
        }

        public void GetProduct(out Cell cell,string nameProduct)
        {
            cell = null;

            if (_cellsBuyer.Count > 0)
            {
                for (int i = 0; i < _cellsBuyer.Count; i++)
                {
                    if (_cellsBuyer[i].Product.Name == nameProduct)
                    {
                        cell = _cellsBuyer[i];
                    }
                }
            }
            else
            {
                Console.WriteLine("В корзине нет товаров");
            }
        }

        private int GetNumber()
        {
            bool isRepeat = true;

            while (isRepeat)
            {
                bool isSuccess = int.TryParse(Console.ReadLine(), out int count);

                if (isSuccess)
                {
                    return count;
                }
                else
                {
                    Console.WriteLine("Неверное значение");
                }
            }

            return 0;
        }

        private int SumPurchase(int count)
        {
            int sumPrice=0;

            foreach (var cell in _cellsBuyer)
            {
                sumPrice += cell.Product.Price * count;
            }

            return sumPrice;
        }
    }
}

