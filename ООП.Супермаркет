using System;
using System.Collections.Generic;


namespace ConsoleApp1
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Shop shop = new Shop();
            shop.CalculateClients(); 
        }
    }

    class Shop
    {
        private Random _random = new Random();
        private Queue<Client> _clients;
        private List<Product> _products;

        public Shop()
        {
            _products = new List<Product>()
            {
            new Product("Соль", 20),
            new Product("Картошка", 40),
            new Product("Свекла", 20),
            new Product("Лук", 10),
            new Product("Капуста", 50),
            new Product("Кофеты", 100),
            new Product("Йогурт", 35),
            new Product("Колбаса", 150),
            new Product("Курица",220),
            new Product("Свинина",300),
            new Product("Говядина", 400),
            new Product("Молоко", 60)
            };

            CreateClients();
        }

        public void CalculateClients()
        {
            const string CommandServeClient = "1";
            const string CommandExit = "2";
            bool isWork = true;

            while (isWork)
            {
                Console.WriteLine($"В очереди {_clients.Count} клиентов\n");
                Console.WriteLine($"Выберите действие \n{CommandServeClient} - Обслужить клиента \n{CommandExit} - Закрыть кассу");

                if (_clients.Count > 0)
                {
                    switch (Console.ReadLine())
                    {
                        case CommandServeClient:
                            ServeClient(_clients.Dequeue());
                            break;

                        case CommandExit:
                            isWork = false;
                            break;
                    }
                }
                else if (_clients.Count == 0)
                {
                    Console.WriteLine("Очередь пуста");
                    isWork = false;
                }

                Console.ReadKey();
                Console.Clear();
            }
        }

        private List<Product> CreateNewProducts()
        {
            int min = 1;
            int max = 10;
            int rand = _random.Next(min, max);
            List<Product> products = new List<Product>();

            for (int i = 0; i < rand; i++)
            {
                int index = _random.Next(_products.Count);
                products.Add(_products[index]);
            }

            return products;
        }

        private void ServeClient(Client client)
        {
            bool isSuccess = true;
            
            while (isSuccess)
            {
                int index = _random.Next(client.GetNumberByers());
                client.ShowInfo();

                if (client.CalculateCost() == 0)
                {
                    isSuccess = false;
                }
                else if (client.CalculateCost() <= client.Money)
                {
                    client.BuyProducts();
                    Console.WriteLine("Спасибо за покупку!!!");
                    isSuccess = false;
                }
                else
                {
                    Console.WriteLine($"\nУ вас недостаточно средств");
                    Console.WriteLine($"Из корзины убрали {client.ShowNameProduct(index)}");
                    client.RemoveProduct(index);
                }
            }
        }

        private void CreateClients()
        {
            _clients = new Queue<Client>();
            int minMoney = 150;
            int maxMoney = 500;
            int minClients = 2;
            int maxClients = 5;

            for (int i = 0; i < _random.Next(minClients, maxClients); i++)
            {
                _clients.Enqueue(new Client(CreateNewProducts(), _random.Next(minMoney,maxMoney)));
            }
        }
    }

    class Product
    {
        public string Name { get; private set; }
        public int Price { get; private set; }

        public Product(string name, int price)
        {
            Name = name;
            Price = price;
        }
    }

    class Client
    {
        private List<Product> _products;
        public int Money { get; private set; }

        public Client(List<Product> product,int money)
        {
            _products = product;
            Money = money;
        }

        public int GetNumberByers()
        {
            return _products.Count;
        }

        public string ShowNameProduct(int index)
        {
            return _products[index].Name;
        }

        public void RemoveProduct(int index)
        {
            _products.RemoveAt(index);
        }

        public int CalculateCost()
        {
            int sumProducts = 0;

            for (int i = 0; i < _products.Count; i++)
            {
                sumProducts += _products[i].Price;
            }

            return sumProducts;
        }
        
        public int BuyProducts()
        {
            return Money -= CalculateCost();
        }

        public void ShowInfo()
        {
            Console.WriteLine($"\nДенег у клиента : {Money}\n");

            if(_products.Count == 0)
            {
                Console.WriteLine("Ваших средств не хватает.Извините");
            }
            else
            {
                Console.WriteLine("в Корзине лежит :");

                foreach (Product product in _products)
                {
                    Console.WriteLine(product.Name);
                }
            }

            if(CalculateCost() != 0)
            {
                Console.WriteLine($"\nСтоимость покупок : {CalculateCost()}");
            }
        }
    }
}
