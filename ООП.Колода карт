using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace CSLight
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Deck deckCard = new Deck();
            deckCard.FillDeck();
            deckCard.ShuffleDeck();
            bool isRepeat = true;

            while (isRepeat)
            {
                Console.WriteLine("1 - взять карты\n2 - посмотреть какие карты у вас в руке\n3 - какие карты остались в колоде");
                Console.WriteLine("Выберите действие :");

                switch (Console.ReadLine())
                {
                    case "1":
                        deckCard.GetCard();
                        break;

                    case "2":
                        deckCard.ShowCardsHand();
                        break;

                    case "3":
                        deckCard.ShowCardsDeck();
                        break;
                }

                Console.WriteLine("Нижмите любую клавишу");
                Console.ReadKey();
                Console.Clear();
            }
        }
    }

    class Card
    {
        public string Value { get;  private set; }
        public string Suit { get; private set; }

        public  Card( string value, string suit)
        {
            Value = value;
            Suit = suit;
        }
    }

    class Deck
    {
        private int _numberCard  = 52;
        private Random _random = new Random();
        private List<Card> _cards = new List<Card>();
        private List<Card> _cardsHand = new List<Card>();
        private List<string> _suit = new List<string>();
        private List<string> _value = new List<string>();
        
        public void Suit()
        {
            
            _suit.AddRange(new string[] { "Черви", "Буби", "Крести", "Пики" });
        }

        public void Value()
        {

            _value.AddRange(new string[] { "2", "3", "4", "5", "6", "7", "8", "9", "10", "Валет", "Королева", "Король", "Туз" });
        }

        public void FillDeck()
        {
            Suit();
            Value();

            for (int i = 0; i < _suit.Count; i++)
            {
                for (int j = 0; j < _value.Count; j++)
                {
                    _cards.Add(new Card( _value[j] ,_suit[i] ));
                }
            }
        }

        public void ShuffleDeck()
        {
            Card tempNumber;
            

            for (int i = 0; i < _cards.Count; i++)
            {
                int randomIndex = _random.Next(0, _cards.Count);
                tempNumber = _cards[i];
                _cards[i] = _cards[randomIndex];
                _cards[randomIndex] = tempNumber;
            }
        }

        public void GetCard()
        {
            bool isWork = true;

            while (isWork)
            {
                Console.WriteLine("Сколько карт вы хотите взять :");
                bool isSucces = int.TryParse(Console.ReadLine(), out int numberCard);

                if (isSucces == true && numberCard > 0 && numberCard <= _numberCard)
                {
                    if(numberCard <= _cards.Count)
                    {
                        for (int i = 0; i < numberCard; )
                        {
                            _cardsHand.Add(_cards[i]);
                            _cards.RemoveAt(i);
                            numberCard--;
                        }
                    }
                    else
                    {
                        Console.WriteLine($"В колоде недостаточно карт,осталось {_cards.Count}");
                    }

                    isWork = false;

                }
                else
                {
                    Console.WriteLine("Неверное значение.Попробуйте снова");
                }
            }
        }

        public void ShowCardsHand()
        {

            foreach (var card in _cardsHand)
            {
                Console.WriteLine(card.Suit + "-" + card.Value);
            }
        }

        public void ShowCardsDeck()
        {
            foreach (var card in _cards)
            {
                Console.WriteLine(card.Suit + "-" + card.Value);
            }
        }
    }
}

