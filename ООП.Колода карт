using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace CSLight
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Deck deckCard = new Deck();
            Player player = new Player();
            deckCard.FillDeck();
            deckCard.ShuffleDeck();
            bool isRepeat = true;
  
            while (isRepeat)
            {
                Console.WriteLine("1 - взять карты\n2 - посмотреть какие карты у вас в руке\n3 - какие карты остались в колоде");
                Console.WriteLine("Выберите действие :");

                switch (Console.ReadLine())
                {
                    case "1":
                        player.GetCardsHand(deckCard);
                        break;

                    case "2":
                        player.ShowCardsHand();
                        break;

                    case "3":
                        deckCard.ShowCardsDeck();
                        break;
                }

                Console.WriteLine("\nНижмите любую клавишу");
                Console.ReadKey();
                Console.Clear();
            }
        }
    }

    class Card
    {
        public string Value { get;  private set; }
        public string Suit { get; private set; }

        public  Card( string value, string suit)
        {
            Value = value;
            Suit = suit;
        }
    }

    class Deck
    {
        private Random _random = new Random();
        private List<Card> _cardsDeck = new List<Card>();
        public int NumberCard { get; private set; }

        public void FillDeck()
        {
            List<string> _suit = new List<string>();
            _suit.AddRange(new string[] { "Черви", "Буби", "Крести", "Пики" });

            List<string> _value = new List<string>();
            _value.AddRange(new string[] { "2", "3", "4", "5", "6", "7", "8", "9", "10", "Валет", "Королева", "Король", "Туз" });

            for (int i = 0; i < _suit.Count; i++)
            {
                for (int j = 0; j < _value.Count; j++)
                {
                    _cardsDeck.Add(new Card( _value[j] ,_suit[i] ));
                    NumberCard++;
                }
            }
        }

        public void ShuffleDeck()
        {
            Card tempNumber;
            
            for (int i = 0; i < _cardsDeck.Count; i++)
            {
                int randomIndex = _random.Next(0, _cardsDeck.Count);
                tempNumber = _cardsDeck[i];
                _cardsDeck[i] = _cardsDeck[randomIndex];
                _cardsDeck[randomIndex] = tempNumber;
            }
        }
        
        public bool GetCard(out Card cards)
        {
            foreach (var card in _cardsDeck)
            {
                cards = card;
                _cardsDeck.Remove(card);
                return true;
            }

            cards = null;
            return false;
        }

        public void ShowCardsDeck()
        {
            if(_cardsDeck.Count > 0)
            {
                foreach (var card in _cardsDeck)
                {
                    Console.WriteLine(card.Suit + "-" + card.Value);
                }
            }
            else
            {
                Console.WriteLine("\nКарт в колоде нет");
            }

            Console.WriteLine($"\nВ колоде осталось {_cardsDeck.Count} карт");
        }
    }

    class Player
    {
        private List<Card> _cardsHand = new List<Card>();
        
        public void GetCardsHand(Deck deck)
        {
            Console.WriteLine("Сколько карт вы хотите взять :");
            bool isSucces = int.TryParse(Console.ReadLine(), out int numberId);

            for (int i = 0; i < numberId; i++)
            {
                if (isSucces == true && numberId > 0 && numberId <= deck.NumberCard)
                {
                    deck.GetCard(out Card card);
                    _cardsHand.Add(card);
                }
            }
        }

        public void ShowCardsHand()
        {
            if( _cardsHand.Count > 0)
            {
                foreach (var card in _cardsHand)
                {
                    Console.WriteLine(card.Suit + "-" + card.Value);
                }
            }
            else
            {
                Console.WriteLine("\nКарт в руке нет ");
            }
        }
    }
}

