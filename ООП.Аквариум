using System;
using System.Collections.Generic;


namespace Fish
{
    internal class Program
    {
        static void Main(string[] args)
        {
            const string CommandNextDay = "1";
            const string CommandAddFish = "2";
            const string CommandRemoveFish = "3";
            const string CommandExit = "4";

            Aquarium aquarium = new Aquarium();
            bool isWork = true;

            while (isWork)
            {
                aquarium.ShowFishs();
                Console.WriteLine($"\nВыберите дейтсвие " +
                    $"\n{CommandNextDay} - следующий день" +
                    $"\n{CommandAddFish} - добавить рыбу в аквариум" +
                    $"\n{CommandRemoveFish} - убрать рыбу из аквариума" +
                    $"\n{CommandExit} - закрыть программу");

                switch (Console.ReadLine())
                {
                    case CommandNextDay:
                        aquarium.GrowingUp();
                        break;

                    case CommandAddFish:
                        aquarium.AddFish();
                        break;

                    case CommandRemoveFish:
                        aquarium.RemoveFish();
                        break;

                    case CommandExit:
                        isWork = false;
                        break;
                }

                Console.ReadKey();
                Console.Clear();
            }
        }
    }

    class Fish
    {
        private Bar _bar = new Bar();

        public Fish(string name, int hp)
        {
            Name = name;
            Hp = hp;
            CountDays++;
        }

        public int CountDays { get; private set; } = 0;
        public string Name { get; private set; }
        public int Hp { get; private set; }

        public void SpendLive()
        {
            int lifeTime = 5;
            Hp -= lifeTime;
        }

        public void ShowBar()
        {
            _bar.Draw(Name, Hp, CountDays);
        }
    }

    class Aquarium
    {
        private Random _random = new Random();
        private Fish[] _blank;
        private List<Fish> _fishs = new List<Fish>();
        private int _maxNumberFish = 5;

        public Aquarium()
        {
            _blank = new Fish[10];
            _blank[0] = new Fish("Карась", 50);
            _blank[1] = new Fish("Окунь", 75);
            _blank[2] = new Fish("Щука", 80);
            _blank[3] = new Fish("Плотва", 45);
            _blank[4] = new Fish("Язь", 25);
            _blank[5] = new Fish("Акула", 100);
            _blank[6] = new Fish("Скат", 85);
            _blank[7] = new Fish("Сом", 90);
            _blank[8] = new Fish("Минтай", 10);
            _blank[9] = new Fish("Сазан", 15);

            Fill();
        }

        public void GrowingUp()
        {
            for (int i = 0; i < _fishs.Count; i++)
            {
                _fishs[i].SpendLive();
                RemovingDead();
            }
        }

        public void ShowFishs()
        {
            for (int i = 0; i < _fishs.Count; i++)
            {
                Console.Write($" {i + 1} - ");
                _fishs[i].ShowBar();
            }
        }

        public void AddFish()
        {
            List<Fish> blank = new List<Fish>() { };

            for (int i = 0; i < _blank.Length; i++)
            {
                blank.Add(_blank[i]);
            }

            int index = _random.Next(_blank.Length);

            if (_fishs.Count < _maxNumberFish)
            {
                _fishs.Add(blank[index]);
            }
            else
            {
                Console.WriteLine("В аквариумен нет места");
            }
        }

        public void RemoveFish()
        {
            if (_fishs.Count > 0)
            {
                Console.WriteLine("Введите номер рыбы для удаления");
                int index = GetIndex();
                _fishs.RemoveAt(index);
            }
            else
            {
                Console.WriteLine("Аквариум пуст");
            }
        }

        private void Fill()
        {
            int index;

            for (int i = 0; i < _maxNumberFish; i++)
            {
                index = _random.Next(_blank.Length);
                _fishs.Add(_blank[index]);
            }
        }

        private void RemovingDead()
        {
            for (int i = 0; i < _fishs.Count; i++)
            {
                if (_fishs[i].Hp <= 0)
                {
                    Console.WriteLine($"Рыбка {_fishs[i].Name} умерла(((");
                    _fishs.RemoveAt(i);
                    i--;
                }
            }
        }

        private int GetIndex()
        {
            bool isTrue = true;

            while (isTrue)
            {
                bool isSuccess = int.TryParse(Console.ReadLine(), out int count);

                if (isSuccess)
                {
                    if (count <= _fishs.Count && count > 0)
                    {
                        return count - 1;
                    }
                    else
                    {
                        Console.WriteLine("Рыбы под таким номером нет");
                    }

                }
                else
                {
                    Console.WriteLine("Неверное значение");
                }
            }

            return 0;
        }
    }

    class Bar
    {
        public void Draw(string name, int hp,int countDays)
        {
            char symbol = ' ';
            int oneIncrements = 5;
            int maxValue = hp / oneIncrements;
            ConsoleColor color = ConsoleColor.White;
            ConsoleColor defaultColor = Console.BackgroundColor;
            string bar = "";
            int hpFish = (hp - oneIncrements * countDays) / oneIncrements;

            for (int i = 0; i < hpFish; i++)
            {
                bar += symbol;
            }

            Console.Write(name + "\t- ");
            Console.Write('[');
            Console.BackgroundColor = color;
            Console.Write(bar);
            Console.BackgroundColor = defaultColor;
            bar = "";

            for (int i = hpFish; i < maxValue; i++)
            {
                bar += symbol;
            }

            Console.Write(bar + ']');
            Console.Write($" Количество дней жизни - {countDays}\n");
        }
    }
}
